
name: Build and Deploy to GKE

on:
  #release:
  #  types: [created]
  push:
    branches:
    - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  DEPLOYMENT_NAME: cnv-middleware-api
  IMAGE: cnv-platform-middleware
  REGISTRY: europe-west3-docker.pkg.dev
  NAMESPACE: cnv-platform
  SSH_USER: ${{ secrets.DEVELOPMENT_SSH_USER }}
  SSH_KEY: ${{ secrets.DEVELOPMENT_SSH_KEY }}
  SSH_HOST: ${{ secrets.DEVELOPMENT_SSH_HOST }}

  ARANGO_ROOT_PASSWORD: ${{ secrets.ARANGO_ROOT_PASSWORD }}
  ARANGO_HOST: ${{ secrets.ARANGO_HOST }}
  ARANGO_USER: ${{ secrets.ARANGO_USER }}
  ARANGO_PASSWORD: ${{ secrets.ARANGO_PASSWORD }}
  ADMIN_USER: ${{ secrets.ADMIN_USER }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        
    # Get npm credentials
    - name: GCP NPM auth
      run: |-
        npx google-artifactregistry-auth .npmrc

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud auth configure-docker \
          europe-west3-docker.pkg.dev

    # Setup Bastion SSH
    - name: Setup SSH
      run: |-
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/development.key
        chmod 600 ~/.ssh/development.key
        cat >>~/.ssh/config <<END
        Host development
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/development.key
          StrictHostKeyChecking no
        END
      
    # Setup git credentials
    - name: Git user config
      run: |-
        git config --global user.email "buildy_mc_build_bot@cloud.de"
        git config --global user.name "Buildy Mc Build Bot"

    # increment package version and publish
    - name: Build
      run: |-
        yarn version --minor

    # Build the Docker image
    - name: Build
      run: |-
        export packageVersion=$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' package.json)
        docker build \
          --tag "$REGISTRY/$PROJECT_ID/$NAMESPACE-container/$IMAGE:$packageVersion" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          -f Dockerfile \
         .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        export packageVersion=$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' package.json)
        docker push "$REGISTRY/$PROJECT_ID/$NAMESPACE-container/$IMAGE:$packageVersion"

    # update git repo
    - name: git push changes
      run: |-
        git push -u origin HEAD:master

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        alias kustomize=$(pwd)/kustomize

    # Deploy arangodb
    - name: Build dependencies manifests
      run: |-
        cd manifests/common/arango
        cat secret.yml.tpl | envsubst > secret.yml
        kustomize build > cnv-middleware-dependencies.yaml
    
    - name: Deploy dependencies GCP
      run: |-
        cd manifests/common/arango
        scp cnv-middleware-dependencies.yaml development:/home/$SSH_USER
        ssh development NAMESPACE=$NAMESPACE DEPLOYMENT_NAME=$DEPLOYMENT_NAME "kubectl -n $NAMESPACE apply -f cnv-middleware-dependencies.yaml"
        ssh development NAMESPACE=$NAMESPACE DEPLOYMENT_NAME=$DEPLOYMENT_NAME "kubectl -n $NAMESPACE rollout status deployment/arango"

    # Deploy the Docker image to the GKE cluster
    - name: Build manifests
      run: |-
        export packageVersion=$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' package.json)
        cd manifests/development/
        cat secret.yml.tpl | envsubst > secret.yml
        kustomize edit set image IMAGE:TAG=$REGISTRY/$PROJECT_ID/$NAMESPACE-container/$IMAGE:$packageVersion
        kustomize build > cnv-middleware-development.yaml
    
    - name: Deploy GCP
      run: |-
        cd manifests/development/
        ssh development NAMESPACE=$NAMESPACE DEPLOYMENT_NAME=$DEPLOYMENT_NAME "kubectl -n $NAMESPACE scale deployment $DEPLOYMENT_NAME --replicas=0 && sleep 30s"
        scp cnv-middleware-development.yaml development:/home/$SSH_USER
        ssh development NAMESPACE=$NAMESPACE DEPLOYMENT_NAME=$DEPLOYMENT_NAME "kubectl -n $NAMESPACE apply -f cnv-middleware-development.yaml"
        ssh development NAMESPACE=$NAMESPACE DEPLOYMENT_NAME=$DEPLOYMENT_NAME "kubectl -n $NAMESPACE rollout status deployment/$DEPLOYMENT_NAME"
        

